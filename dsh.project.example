#!/bin/bash
#
# Example dsh.project file which re-implements some of the linux specific tweaks
# and also shows how you can extend dsh for you own projects.
#
# In particualar this does:
#   Setup nginx as a reverse proxy on each start, if required.
#   Stop nginx reverse proxy on exit.
#   Replace the shell function with our own which is more linux friendly.

if [ ${HOST_TYPE} != "linux" ]; then
    return
fi

# Set some env vars we use in our slightly modified docker-compose files
export HOST_SSH_AUTH_SOCK_DIR=$(dirname ${SSH_AUTH_SOCK})
export CONTAINER_SSH_AUTH_SOCK=/ssh/$(basename ${SSH_AUTH_SOCK})

# Add functionality to the dsh setup/start function
setup_nginx() {
  set +e
  # Test to make sure its not already on the network.
  if ! docker network inspect ${PROJECT}_default | grep "nginx-proxy" > /dev/null; then
    notice "Connecting nginx-proxy to the network."
    docker network connect ${PROJECT}_default nginx-proxy
  fi
  export URL="http://${PROJECT}.${DOMAIN}:8080"
  set -e
}

# Add functionality to the dsh stop function
stop_nginx() {
  if docker network ls | grep "\s${PROJECT}_default" > /dev/null; then
    notice "Disconnecting nginx proxy from network."
    set +e
    docker network disconnect ${PROJECT}_default nginx-proxy
    set -e
  fi
}

# Overridden dsh_shell function
start_shell() {
  if ! docker ps | grep "\s${PROJECT}_web_1" > /dev/null; then
    notice "Project not running, starting."
    dsh_start
  fi

  # Setup docker to run the shell as the current user, thus removing any
  # permission issues.
  if ! docker-compose -f ${DOCKER_COMPOSE_FILE} exec web id -u ${USER} > /dev/null 2>&1; then
    notice "Setting up user $USER on web container."
    # Add user with local $USER name to container.
    docker-compose -f ${DOCKER_COMPOSE_FILE} exec web adduser --disabled-password --uid ${UID} \
      --gecos ${USER} --home /home/${USER} ${USER} > /dev/null
    # Allow sudo without password for user.
    docker-compose -f ${DOCKER_COMPOSE_FILE} exec web /bin/bash -c "echo '${USER} ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/${USER}"
  fi

  docker-compose -f ${DOCKER_COMPOSE_FILE} exec \
    -u ${USER} --env SSH_AUTH_SOCK=${CONTAINER_SSH_AUTH_SOCK} \
    -e COLUMNS="$(tput cols)" \
    -e LINES="$(tput lines)" \
    web ${@:-/bin/bash}

  # Exit here, we don't want to run the dsh shell function now.
  exit
}

case ${1} in
  she*)
    start_shell
    ;;
  star*)
    setup_nginx
    ;;
  sto*|pur*)
    stop_nginx
    ;;
esac
